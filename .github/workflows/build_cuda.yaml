name: Build Docker

on:
  workflow_dispatch:
  release:
    types: [published]
  push:
    tags:
      - '**[0-9]+.[0-9]+.[0-9]+*'

jobs:
    build-and-push-image:
      runs-on: ubuntu-latest
      environment: 'Prod'
      strategy:
        matrix:
          compute_capability: [89]
        fail-fast: false
        
      permissions:
          contents: write
          packages: write
          # This is used to complete the identity challenge with sigstore/fulcio when running outside of PRs.
          id-token: write
          security-events: write
          
      steps:
          - name: Checkout repository
            uses: actions/checkout@v4

          - name: Delete huge unnecessary tools folder
            run: rm -rf /opt/hostedtoolcache

          - name: Free Disk Space (Ubuntu)
            uses: jlumbroso/free-disk-space@v1.3.1
            with:
              tool-cache: false
              # all of these default to true to skip
              android: true
              dotnet: true
              haskell: true
              large-packages: true
              swap-storage: false

          # - name: Initialize Docker Buildx
          #   uses: docker/setup-buildx-action@v3
          #   with:
          #     install: true
          
          # - name: Setup cache
          #   uses: actions/cache@v4
          #   with:
          #     path: /tmp/.buildx-cache
          #     key: ${{ runner.os }}-buildx-${{ github.sha }}
          #     restore-keys: |
          #       ${{ runner.os }}-buildx-
          
          - name: Login to Docker Hub
            if: github.event_name != 'pull_request'
            uses: docker/login-action@v3
            with:
              username: ${{ vars.DOCKERHUB_USER }}
              password: ${{ secrets.DOCKERHUB_TOKEN }}
              
          - name: Set up QEMU
            uses: docker/setup-qemu-action@v3

          - name: Build and push
            uses: docker/build-push-action@v6
            with:
              context: .
              push: true
              tags: cuda-${{matrix.compute_capability}}-latest
              file: Dockerfile.cuda-all
              cache-from: type=gha
              cache-to: type=gha,mode=max
              platform: platform=linux/amd64
              
          # - name: Build and Push
          #   run: |
          #     tag=cuda-${{matrix.compute_capability}}-latest
          #     docker build . -f Dockerfile.cuda-all --build-arg max_jobs=2 --build-arg CUDA_COMPUTE_CAP=${{ matrix.compute_capability }} -t kairos333/mistral.rs:${tag} --no-cache
          #     docker push kairos333/mistral.rs:${tag}
              
